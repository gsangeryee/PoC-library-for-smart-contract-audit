{"abi":[],"bytecode":{"object":"0x6055604b600b8282823980515f1a607314603f577f4e487b71000000000000000000000000000000000000000000000000000000005f525f60045260245ffd5b305f52607381538281f3fe730000000000000000000000000000000000000000301460806040525f80fdfea264697066735822122000b66ca354142cca84976671328e9ea8b48fc8e2819da79b91c72d171fd7969264736f6c63430008140033","sourceMap":"521:3729:15:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;","linkReferences":{}},"deployedBytecode":{"object":"0x730000000000000000000000000000000000000000301460806040525f80fdfea264697066735822122000b66ca354142cca84976671328e9ea8b48fc8e2819da79b91c72d171fd7969264736f6c63430008140033","sourceMap":"521:3729:15:-:0;;;;;;;;","linkReferences":{}},"methodIdentifiers":{},"rawMetadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Signature message hash utilities for producing digests to be consumed by {ECDSA} recovery or signing. The library provides methods for generating a hash of a message that conforms to the https://eips.ethereum.org/EIPS/eip-191[ERC-191] and https://eips.ethereum.org/EIPS/eip-712[EIP 712] specifications.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"lib/openzeppelin-contracts/contracts/utils/cryptography/MessageHashUtils.sol\":\"MessageHashUtils\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[\":@openzeppelin/contracts/=lib/openzeppelin-contracts/contracts/\",\":ds-test/=lib/forge-std/lib/ds-test/src/\",\":erc4626-tests/=lib/openzeppelin-contracts/lib/erc4626-tests/\",\":forge-std/=lib/forge-std/src/\",\":halmos-cheatcodes/=lib/openzeppelin-contracts/lib/halmos-cheatcodes/src/\",\":openzeppelin-contracts/=lib/openzeppelin-contracts/\",\":openzeppelin/=lib/openzeppelin-contracts/\"]},\"sources\":{\"lib/openzeppelin-contracts/contracts/utils/Panic.sol\":{\"keccak256\":\"0xf7fe324703a64fc51702311dc51562d5cb1497734f074e4f483bfb6717572d7a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c6a5ff4f9fd8649b7ee20800b7fa387d3465bd77cf20c2d1068cd5c98e1ed57a\",\"dweb:/ipfs/QmVSaVJf9FXFhdYEYeCEfjMVHrxDh5qL4CGkxdMWpQCrqG\"]},\"lib/openzeppelin-contracts/contracts/utils/Strings.sol\":{\"keccak256\":\"0x81c274a60a7ae232ae3dc9ff3a4011b4849a853c13b0832cd3351bb1bb2f0dae\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://9da0c20dc74358a2a76330818f3bac9d1e2ce3371aec847b9cbf5d147fbae4f6\",\"dweb:/ipfs/QmeczhmnFv1hbXKGLwbYXY6Rrytc9a5A2YaRi5QMMgjPnb\"]},\"lib/openzeppelin-contracts/contracts/utils/cryptography/MessageHashUtils.sol\":{\"keccak256\":\"0x26670fef37d4adf55570ba78815eec5f31cb017e708f61886add4fc4da665631\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b16d45febff462bafd8a5669f904796a835baf607df58a8461916d3bf4f08c59\",\"dweb:/ipfs/QmU2eJFpjmT4vxeJWJyLeQb8Xht1kdB8Y6MKLDPFA9WPux\"]},\"lib/openzeppelin-contracts/contracts/utils/math/Math.sol\":{\"keccak256\":\"0x1225214420c83ebcca88f2ae2b50f053aaa7df7bd684c3e878d334627f2edfc6\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6c5fab4970634f9ab9a620983dc1c8a30153981a0b1a521666e269d0a11399d3\",\"dweb:/ipfs/QmVRnBC575MESGkEHndjujtR7qub2FzU9RWy9eKLp4hPZB\"]},\"lib/openzeppelin-contracts/contracts/utils/math/SafeCast.sol\":{\"keccak256\":\"0x195533c86d0ef72bcc06456a4f66a9b941f38eb403739b00f21fd7c1abd1ae54\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b1d578337048cad08c1c03041cca5978eff5428aa130c781b271ad9e5566e1f8\",\"dweb:/ipfs/QmPFKL2r9CBsMwmUqqdcFPfHZB2qcs9g1HDrPxzWSxomvy\"]},\"lib/openzeppelin-contracts/contracts/utils/math/SignedMath.sol\":{\"keccak256\":\"0xb1970fac7b64e6c09611e6691791e848d5e3fe410fa5899e7df2e0afd77a99e3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://db5fbb3dddd8b7047465b62575d96231ba8a2774d37fb4737fbf23340fabbb03\",\"dweb:/ipfs/QmVUSvooZKEdEdap619tcJjTLcAuH6QBdZqAzWwnAXZAWJ\"]}},\"version\":1}","metadata":{"compiler":{"version":"0.8.20+commit.a1b79de6"},"language":"Solidity","output":{"abi":[],"devdoc":{"kind":"dev","methods":{},"version":1},"userdoc":{"kind":"user","methods":{},"version":1}},"settings":{"remappings":["@openzeppelin/contracts/=lib/openzeppelin-contracts/contracts/","ds-test/=lib/forge-std/lib/ds-test/src/","erc4626-tests/=lib/openzeppelin-contracts/lib/erc4626-tests/","forge-std/=lib/forge-std/src/","halmos-cheatcodes/=lib/openzeppelin-contracts/lib/halmos-cheatcodes/src/","openzeppelin-contracts/=lib/openzeppelin-contracts/","openzeppelin/=lib/openzeppelin-contracts/"],"optimizer":{"enabled":false,"runs":200},"metadata":{"bytecodeHash":"ipfs"},"compilationTarget":{"lib/openzeppelin-contracts/contracts/utils/cryptography/MessageHashUtils.sol":"MessageHashUtils"},"evmVersion":"shanghai","libraries":{}},"sources":{"lib/openzeppelin-contracts/contracts/utils/Panic.sol":{"keccak256":"0xf7fe324703a64fc51702311dc51562d5cb1497734f074e4f483bfb6717572d7a","urls":["bzz-raw://c6a5ff4f9fd8649b7ee20800b7fa387d3465bd77cf20c2d1068cd5c98e1ed57a","dweb:/ipfs/QmVSaVJf9FXFhdYEYeCEfjMVHrxDh5qL4CGkxdMWpQCrqG"],"license":"MIT"},"lib/openzeppelin-contracts/contracts/utils/Strings.sol":{"keccak256":"0x81c274a60a7ae232ae3dc9ff3a4011b4849a853c13b0832cd3351bb1bb2f0dae","urls":["bzz-raw://9da0c20dc74358a2a76330818f3bac9d1e2ce3371aec847b9cbf5d147fbae4f6","dweb:/ipfs/QmeczhmnFv1hbXKGLwbYXY6Rrytc9a5A2YaRi5QMMgjPnb"],"license":"MIT"},"lib/openzeppelin-contracts/contracts/utils/cryptography/MessageHashUtils.sol":{"keccak256":"0x26670fef37d4adf55570ba78815eec5f31cb017e708f61886add4fc4da665631","urls":["bzz-raw://b16d45febff462bafd8a5669f904796a835baf607df58a8461916d3bf4f08c59","dweb:/ipfs/QmU2eJFpjmT4vxeJWJyLeQb8Xht1kdB8Y6MKLDPFA9WPux"],"license":"MIT"},"lib/openzeppelin-contracts/contracts/utils/math/Math.sol":{"keccak256":"0x1225214420c83ebcca88f2ae2b50f053aaa7df7bd684c3e878d334627f2edfc6","urls":["bzz-raw://6c5fab4970634f9ab9a620983dc1c8a30153981a0b1a521666e269d0a11399d3","dweb:/ipfs/QmVRnBC575MESGkEHndjujtR7qub2FzU9RWy9eKLp4hPZB"],"license":"MIT"},"lib/openzeppelin-contracts/contracts/utils/math/SafeCast.sol":{"keccak256":"0x195533c86d0ef72bcc06456a4f66a9b941f38eb403739b00f21fd7c1abd1ae54","urls":["bzz-raw://b1d578337048cad08c1c03041cca5978eff5428aa130c781b271ad9e5566e1f8","dweb:/ipfs/QmPFKL2r9CBsMwmUqqdcFPfHZB2qcs9g1HDrPxzWSxomvy"],"license":"MIT"},"lib/openzeppelin-contracts/contracts/utils/math/SignedMath.sol":{"keccak256":"0xb1970fac7b64e6c09611e6691791e848d5e3fe410fa5899e7df2e0afd77a99e3","urls":["bzz-raw://db5fbb3dddd8b7047465b62575d96231ba8a2774d37fb4737fbf23340fabbb03","dweb:/ipfs/QmVUSvooZKEdEdap619tcJjTLcAuH6QBdZqAzWwnAXZAWJ"],"license":"MIT"}},"version":1},"ast":{"absolutePath":"lib/openzeppelin-contracts/contracts/utils/cryptography/MessageHashUtils.sol","id":3553,"exportedSymbols":{"MessageHashUtils":[3552],"Strings":[3118]},"nodeType":"SourceUnit","src":"123:4128:15","nodes":[{"id":3468,"nodeType":"PragmaDirective","src":"123:24:15","nodes":[],"literals":["solidity","^","0.8",".20"]},{"id":3470,"nodeType":"ImportDirective","src":"149:39:15","nodes":[],"absolutePath":"lib/openzeppelin-contracts/contracts/utils/Strings.sol","file":"../Strings.sol","nameLocation":"-1:-1:-1","scope":3553,"sourceUnit":3119,"symbolAliases":[{"foreign":{"id":3469,"name":"Strings","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3118,"src":"157:7:15","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"id":3552,"nodeType":"ContractDefinition","src":"521:3729:15","nodes":[{"id":3481,"nodeType":"FunctionDefinition","src":"1247:433:15","nodes":[],"body":{"id":3480,"nodeType":"Block","src":"1339:341:15","nodes":[],"statements":[{"AST":{"nodeType":"YulBlock","src":"1374:300:15","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1395:4:15","type":"","value":"0x00"},{"hexValue":"19457468657265756d205369676e6564204d6573736167653a0a3332","kind":"string","nodeType":"YulLiteral","src":"1401:34:15","type":"","value":"\u0019Ethereum Signed Message:\n32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1388:6:15"},"nodeType":"YulFunctionCall","src":"1388:48:15"},"nodeType":"YulExpressionStatement","src":"1388:48:15"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1497:4:15","type":"","value":"0x1c"},{"name":"messageHash","nodeType":"YulIdentifier","src":"1503:11:15"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1490:6:15"},"nodeType":"YulFunctionCall","src":"1490:25:15"},"nodeType":"YulExpressionStatement","src":"1490:25:15"},{"nodeType":"YulAssignment","src":"1569:31:15","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1589:4:15","type":"","value":"0x00"},{"kind":"number","nodeType":"YulLiteral","src":"1595:4:15","type":"","value":"0x3c"}],"functionName":{"name":"keccak256","nodeType":"YulIdentifier","src":"1579:9:15"},"nodeType":"YulFunctionCall","src":"1579:21:15"},"variableNames":[{"name":"digest","nodeType":"YulIdentifier","src":"1569:6:15"}]}]},"evmVersion":"shanghai","externalReferences":[{"declaration":3477,"isOffset":false,"isSlot":false,"src":"1569:6:15","valueSize":1},{"declaration":3474,"isOffset":false,"isSlot":false,"src":"1503:11:15","valueSize":1}],"flags":["memory-safe"],"id":3479,"nodeType":"InlineAssembly","src":"1349:325:15"}]},"documentation":{"id":3472,"nodeType":"StructuredDocumentation","src":"552:690:15","text":" @dev Returns the keccak256 digest of an ERC-191 signed data with version\n `0x45` (`personal_sign` messages).\n The digest is calculated by prefixing a bytes32 `messageHash` with\n `\"\\x19Ethereum Signed Message:\\n32\"` and hashing the result. It corresponds with the\n hash signed when using the https://ethereum.org/en/developers/docs/apis/json-rpc/#eth_sign[`eth_sign`] JSON-RPC method.\n NOTE: The `messageHash` parameter is intended to be the result of hashing a raw message with\n keccak256, although any bytes32 value can be safely used because the final digest will\n be re-hashed.\n See {ECDSA-recover}."},"implemented":true,"kind":"function","modifiers":[],"name":"toEthSignedMessageHash","nameLocation":"1256:22:15","parameters":{"id":3475,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3474,"mutability":"mutable","name":"messageHash","nameLocation":"1287:11:15","nodeType":"VariableDeclaration","scope":3481,"src":"1279:19:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3473,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1279:7:15","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"1278:21:15"},"returnParameters":{"id":3478,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3477,"mutability":"mutable","name":"digest","nameLocation":"1331:6:15","nodeType":"VariableDeclaration","scope":3481,"src":"1323:14:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3476,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1323:7:15","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"1322:16:15"},"scope":3552,"stateMutability":"pure","virtual":false,"visibility":"internal"},{"id":3507,"nodeType":"FunctionDefinition","src":"2171:229:15","nodes":[],"body":{"id":3506,"nodeType":"Block","src":"2257:143:15","nodes":[],"statements":[{"expression":{"arguments":[{"arguments":[{"hexValue":"19457468657265756d205369676e6564204d6573736167653a0a","id":3493,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2309:32:15","typeDescriptions":{"typeIdentifier":"t_stringliteral_9af2d9c228f6cfddaa6d1e5b94e0bce4ab16bd9a472a2b7fbfd74ebff4c720b4","typeString":"literal_string hex\"19457468657265756d205369676e6564204d6573736167653a0a\""},"value":"\u0019Ethereum Signed Message:\n"},{"arguments":[{"arguments":[{"expression":{"id":3498,"name":"message","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3484,"src":"2366:7:15","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":3499,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2374:6:15","memberName":"length","nodeType":"MemberAccess","src":"2366:14:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":3496,"name":"Strings","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3118,"src":"2349:7:15","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Strings_$3118_$","typeString":"type(library Strings)"}},"id":3497,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2357:8:15","memberName":"toString","nodeType":"MemberAccess","referencedDeclaration":1830,"src":"2349:16:15","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_string_memory_ptr_$","typeString":"function (uint256) pure returns (string memory)"}},"id":3500,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2349:32:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":3495,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2343:5:15","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":3494,"name":"bytes","nodeType":"ElementaryTypeName","src":"2343:5:15","typeDescriptions":{}}},"id":3501,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2343:39:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"id":3502,"name":"message","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3484,"src":"2384:7:15","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_9af2d9c228f6cfddaa6d1e5b94e0bce4ab16bd9a472a2b7fbfd74ebff4c720b4","typeString":"literal_string hex\"19457468657265756d205369676e6564204d6573736167653a0a\""},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"id":3491,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2296:5:15","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":3490,"name":"bytes","nodeType":"ElementaryTypeName","src":"2296:5:15","typeDescriptions":{}}},"id":3492,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2302:6:15","memberName":"concat","nodeType":"MemberAccess","src":"2296:12:15","typeDescriptions":{"typeIdentifier":"t_function_bytesconcat_pure$__$returns$_t_bytes_memory_ptr_$","typeString":"function () pure returns (bytes memory)"}},"id":3503,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2296:96:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":3489,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"2286:9:15","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":3504,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2286:107:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"functionReturnParameters":3488,"id":3505,"nodeType":"Return","src":"2267:126:15"}]},"documentation":{"id":3482,"nodeType":"StructuredDocumentation","src":"1686:480:15","text":" @dev Returns the keccak256 digest of an ERC-191 signed data with version\n `0x45` (`personal_sign` messages).\n The digest is calculated by prefixing an arbitrary `message` with\n `\"\\x19Ethereum Signed Message:\\n\" + len(message)` and hashing the result. It corresponds with the\n hash signed when using the https://ethereum.org/en/developers/docs/apis/json-rpc/#eth_sign[`eth_sign`] JSON-RPC method.\n See {ECDSA-recover}."},"implemented":true,"kind":"function","modifiers":[],"name":"toEthSignedMessageHash","nameLocation":"2180:22:15","parameters":{"id":3485,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3484,"mutability":"mutable","name":"message","nameLocation":"2216:7:15","nodeType":"VariableDeclaration","scope":3507,"src":"2203:20:15","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":3483,"name":"bytes","nodeType":"ElementaryTypeName","src":"2203:5:15","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"2202:22:15"},"returnParameters":{"id":3488,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3487,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3507,"src":"2248:7:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3486,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2248:7:15","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"2247:9:15"},"scope":3552,"stateMutability":"pure","virtual":false,"visibility":"internal"},{"id":3527,"nodeType":"FunctionDefinition","src":"2743:191:15","nodes":[],"body":{"id":3526,"nodeType":"Block","src":"2854:80:15","nodes":[],"statements":[{"expression":{"arguments":[{"arguments":[{"hexValue":"1900","id":3520,"isConstant":false,"isLValue":false,"isPure":true,"kind":"hexString","lValueRequested":false,"nodeType":"Literal","src":"2898:10:15","typeDescriptions":{"typeIdentifier":"t_stringliteral_73fd5d154550a4a103564cb191928cd38898034de1b952dc21b290898b4b697a","typeString":"literal_string hex\"1900\""},"value":"\u0019\u0000"},{"id":3521,"name":"validator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3510,"src":"2910:9:15","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":3522,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3512,"src":"2921:4:15","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_73fd5d154550a4a103564cb191928cd38898034de1b952dc21b290898b4b697a","typeString":"literal_string hex\"1900\""},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"id":3518,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"2881:3:15","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":3519,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"2885:12:15","memberName":"encodePacked","nodeType":"MemberAccess","src":"2881:16:15","typeDescriptions":{"typeIdentifier":"t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$","typeString":"function () pure returns (bytes memory)"}},"id":3523,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2881:45:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":3517,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"2871:9:15","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":3524,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2871:56:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"functionReturnParameters":3516,"id":3525,"nodeType":"Return","src":"2864:63:15"}]},"documentation":{"id":3508,"nodeType":"StructuredDocumentation","src":"2406:332:15","text":" @dev Returns the keccak256 digest of an ERC-191 signed data with version\n `0x00` (data with intended validator).\n The digest is calculated by prefixing an arbitrary `data` with `\"\\x19\\x00\"` and the intended\n `validator` address. Then hashing the result.\n See {ECDSA-recover}."},"implemented":true,"kind":"function","modifiers":[],"name":"toDataWithIntendedValidatorHash","nameLocation":"2752:31:15","parameters":{"id":3513,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3510,"mutability":"mutable","name":"validator","nameLocation":"2792:9:15","nodeType":"VariableDeclaration","scope":3527,"src":"2784:17:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3509,"name":"address","nodeType":"ElementaryTypeName","src":"2784:7:15","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3512,"mutability":"mutable","name":"data","nameLocation":"2816:4:15","nodeType":"VariableDeclaration","scope":3527,"src":"2803:17:15","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":3511,"name":"bytes","nodeType":"ElementaryTypeName","src":"2803:5:15","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"2783:38:15"},"returnParameters":{"id":3516,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3515,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3527,"src":"2845:7:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3514,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2845:7:15","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"2844:9:15"},"scope":3552,"stateMutability":"pure","virtual":false,"visibility":"internal"},{"id":3539,"nodeType":"FunctionDefinition","src":"3074:358:15","nodes":[],"body":{"id":3538,"nodeType":"Block","src":"3216:216:15","nodes":[],"statements":[{"AST":{"nodeType":"YulBlock","src":"3251:175:15","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"3272:4:15","type":"","value":"0x00"},{"hexValue":"1900","kind":"string","nodeType":"YulLiteral","src":"3278:10:15","type":"","value":"\u0019\u0000"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"3265:6:15"},"nodeType":"YulFunctionCall","src":"3265:24:15"},"nodeType":"YulExpressionStatement","src":"3265:24:15"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"3309:4:15","type":"","value":"0x02"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"3319:2:15","type":"","value":"96"},{"name":"validator","nodeType":"YulIdentifier","src":"3323:9:15"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"3315:3:15"},"nodeType":"YulFunctionCall","src":"3315:18:15"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"3302:6:15"},"nodeType":"YulFunctionCall","src":"3302:32:15"},"nodeType":"YulExpressionStatement","src":"3302:32:15"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"3354:4:15","type":"","value":"0x16"},{"name":"messageHash","nodeType":"YulIdentifier","src":"3360:11:15"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"3347:6:15"},"nodeType":"YulFunctionCall","src":"3347:25:15"},"nodeType":"YulExpressionStatement","src":"3347:25:15"},{"nodeType":"YulAssignment","src":"3385:31:15","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"3405:4:15","type":"","value":"0x00"},{"kind":"number","nodeType":"YulLiteral","src":"3411:4:15","type":"","value":"0x36"}],"functionName":{"name":"keccak256","nodeType":"YulIdentifier","src":"3395:9:15"},"nodeType":"YulFunctionCall","src":"3395:21:15"},"variableNames":[{"name":"digest","nodeType":"YulIdentifier","src":"3385:6:15"}]}]},"evmVersion":"shanghai","externalReferences":[{"declaration":3535,"isOffset":false,"isSlot":false,"src":"3385:6:15","valueSize":1},{"declaration":3532,"isOffset":false,"isSlot":false,"src":"3360:11:15","valueSize":1},{"declaration":3530,"isOffset":false,"isSlot":false,"src":"3323:9:15","valueSize":1}],"flags":["memory-safe"],"id":3537,"nodeType":"InlineAssembly","src":"3226:200:15"}]},"documentation":{"id":3528,"nodeType":"StructuredDocumentation","src":"2940:129:15","text":" @dev Variant of {toDataWithIntendedValidatorHash-address-bytes} optimized for cases where `data` is a bytes32."},"implemented":true,"kind":"function","modifiers":[],"name":"toDataWithIntendedValidatorHash","nameLocation":"3083:31:15","parameters":{"id":3533,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3530,"mutability":"mutable","name":"validator","nameLocation":"3132:9:15","nodeType":"VariableDeclaration","scope":3539,"src":"3124:17:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3529,"name":"address","nodeType":"ElementaryTypeName","src":"3124:7:15","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3532,"mutability":"mutable","name":"messageHash","nameLocation":"3159:11:15","nodeType":"VariableDeclaration","scope":3539,"src":"3151:19:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3531,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3151:7:15","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"3114:62:15"},"returnParameters":{"id":3536,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3535,"mutability":"mutable","name":"digest","nameLocation":"3208:6:15","nodeType":"VariableDeclaration","scope":3539,"src":"3200:14:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3534,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3200:7:15","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"3199:16:15"},"scope":3552,"stateMutability":"pure","virtual":false,"visibility":"internal"},{"id":3551,"nodeType":"FunctionDefinition","src":"3874:374:15","nodes":[],"body":{"id":3550,"nodeType":"Block","src":"3983:265:15","nodes":[],"statements":[{"AST":{"nodeType":"YulBlock","src":"4018:224:15","statements":[{"nodeType":"YulVariableDeclaration","src":"4032:22:15","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"4049:4:15","type":"","value":"0x40"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"4043:5:15"},"nodeType":"YulFunctionCall","src":"4043:11:15"},"variables":[{"name":"ptr","nodeType":"YulTypedName","src":"4036:3:15","type":""}]},{"expression":{"arguments":[{"name":"ptr","nodeType":"YulIdentifier","src":"4074:3:15"},{"hexValue":"1901","kind":"string","nodeType":"YulLiteral","src":"4079:10:15","type":"","value":"\u0019\u0001"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"4067:6:15"},"nodeType":"YulFunctionCall","src":"4067:23:15"},"nodeType":"YulExpressionStatement","src":"4067:23:15"},{"expression":{"arguments":[{"arguments":[{"name":"ptr","nodeType":"YulIdentifier","src":"4114:3:15"},{"kind":"number","nodeType":"YulLiteral","src":"4119:4:15","type":"","value":"0x02"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4110:3:15"},"nodeType":"YulFunctionCall","src":"4110:14:15"},{"name":"domainSeparator","nodeType":"YulIdentifier","src":"4126:15:15"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"4103:6:15"},"nodeType":"YulFunctionCall","src":"4103:39:15"},"nodeType":"YulExpressionStatement","src":"4103:39:15"},{"expression":{"arguments":[{"arguments":[{"name":"ptr","nodeType":"YulIdentifier","src":"4166:3:15"},{"kind":"number","nodeType":"YulLiteral","src":"4171:4:15","type":"","value":"0x22"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4162:3:15"},"nodeType":"YulFunctionCall","src":"4162:14:15"},{"name":"structHash","nodeType":"YulIdentifier","src":"4178:10:15"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"4155:6:15"},"nodeType":"YulFunctionCall","src":"4155:34:15"},"nodeType":"YulExpressionStatement","src":"4155:34:15"},{"nodeType":"YulAssignment","src":"4202:30:15","value":{"arguments":[{"name":"ptr","nodeType":"YulIdentifier","src":"4222:3:15"},{"kind":"number","nodeType":"YulLiteral","src":"4227:4:15","type":"","value":"0x42"}],"functionName":{"name":"keccak256","nodeType":"YulIdentifier","src":"4212:9:15"},"nodeType":"YulFunctionCall","src":"4212:20:15"},"variableNames":[{"name":"digest","nodeType":"YulIdentifier","src":"4202:6:15"}]}]},"evmVersion":"shanghai","externalReferences":[{"declaration":3547,"isOffset":false,"isSlot":false,"src":"4202:6:15","valueSize":1},{"declaration":3542,"isOffset":false,"isSlot":false,"src":"4126:15:15","valueSize":1},{"declaration":3544,"isOffset":false,"isSlot":false,"src":"4178:10:15","valueSize":1}],"flags":["memory-safe"],"id":3549,"nodeType":"InlineAssembly","src":"3993:249:15"}]},"documentation":{"id":3540,"nodeType":"StructuredDocumentation","src":"3438:431:15","text":" @dev Returns the keccak256 digest of an EIP-712 typed data (ERC-191 version `0x01`).\n The digest is calculated from a `domainSeparator` and a `structHash`, by prefixing them with\n `\\x19\\x01` and hashing the result. It corresponds to the hash signed by the\n https://eips.ethereum.org/EIPS/eip-712[`eth_signTypedData`] JSON-RPC method as part of EIP-712.\n See {ECDSA-recover}."},"implemented":true,"kind":"function","modifiers":[],"name":"toTypedDataHash","nameLocation":"3883:15:15","parameters":{"id":3545,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3542,"mutability":"mutable","name":"domainSeparator","nameLocation":"3907:15:15","nodeType":"VariableDeclaration","scope":3551,"src":"3899:23:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3541,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3899:7:15","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":3544,"mutability":"mutable","name":"structHash","nameLocation":"3932:10:15","nodeType":"VariableDeclaration","scope":3551,"src":"3924:18:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3543,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3924:7:15","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"3898:45:15"},"returnParameters":{"id":3548,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3547,"mutability":"mutable","name":"digest","nameLocation":"3975:6:15","nodeType":"VariableDeclaration","scope":3551,"src":"3967:14:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3546,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3967:7:15","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"3966:16:15"},"scope":3552,"stateMutability":"pure","virtual":false,"visibility":"internal"}],"abstract":false,"baseContracts":[],"canonicalName":"MessageHashUtils","contractDependencies":[],"contractKind":"library","documentation":{"id":3471,"nodeType":"StructuredDocumentation","src":"190:330:15","text":" @dev Signature message hash utilities for producing digests to be consumed by {ECDSA} recovery or signing.\n The library provides methods for generating a hash of a message that conforms to the\n https://eips.ethereum.org/EIPS/eip-191[ERC-191] and https://eips.ethereum.org/EIPS/eip-712[EIP 712]\n specifications."},"fullyImplemented":true,"linearizedBaseContracts":[3552],"name":"MessageHashUtils","nameLocation":"529:16:15","scope":3553,"usedErrors":[],"usedEvents":[]}],"license":"MIT"},"id":15}